{"ast":null,"code":"import _objectSpread from \"/home/yogesh/listtsk/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/yogesh/listtsk/src/Context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst CourseContext = React.createContext();\n\nclass CourseProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.removeItem = id => {\n      console.log(\"Removed\");\n    };\n\n    this.clearCart = () => {\n      console.log(\"cart cleared\");\n    };\n\n    this.addtoCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: [...tempProducts],\n          cart: [...this.state.cart, product],\n          detailProduct: _objectSpread({}, product)\n        };\n      }, this.addTotals);\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      return {\n        subTotal,\n        tax,\n        total\n      };\n    };\n\n    this.addTotals = () => {\n      const totals = this.getTotals();\n      this.setState(() => {\n        return {\n          cartSubTotal: totals.subTotal,\n          cartTax: totals.tax,\n          cartTotal: totals.total\n        };\n      });\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removedProduct = tempProducts[index];\n      removedProduct.inCart = false;\n      removedProduct.count = 0;\n      removedProduct.total = 0;\n      tempCart = tempCart.filter(item => {\n        return item.id !== id;\n      });\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, this.addTotals);\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.state = {\n      products: [],\n      cart: [],\n      detailProduct: detailProduct,\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(CourseContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addtoCart: this.addtoCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst CourseConsumer = CourseContext.Consumer;\nexport { CourseProvider, CourseConsumer };","map":{"version":3,"sources":["/home/yogesh/listtsk/src/Context.js"],"names":["React","Component","storeProducts","detailProduct","CourseContext","createContext","CourseProvider","constructor","props","getItem","id","product","state","products","find","item","handleDetail","setState","removeItem","console","log","clearCart","addtoCart","tempProducts","index","indexOf","inCart","count","price","total","cart","addTotals","openModal","modalProduct","modalOpen","closeModal","setProducts","forEach","singleItem","getTotals","subTotal","map","tempTax","tax","parseFloat","toFixed","totals","cartSubTotal","cartTax","cartTotal","tempCart","removedProduct","filter","componentDidMount","render","children","CourseConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {storeProducts, detailProduct} from './data'\n\n\nconst CourseContext = React.createContext();\n\n\n\nclass CourseProvider extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             products:[],\n             cart:[],\n             detailProduct: detailProduct,\n             modalOpen:false,\n             modalProduct:detailProduct,\n             cartSubTotal: 0,\n             cartTax: 0,\n             cartTotal: 0\n        }\n    }\n\n    getItem = (id) =>{\n        const product = this.state.products.find(item => item.id === id)\n        return product;\n    }\n\n    handleDetail = (id) =>{\n        const product = this.getItem(id);\n        this.setState(\n            ()=>{\n                return {detailProduct: product}\n            }\n        )\n    }\n\n    removeItem = (id) =>{\n        console.log(\"Removed\")\n    } \n\n    clearCart = () =>{\n        console.log(\"cart cleared\")\n    }\n\n    addtoCart = id => {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n    \n        this.setState(() => {\n          return {\n            products: [...tempProducts],\n            cart: [...this.state.cart, product],\n            detailProduct: { ...product }\n          };\n        }, this.addTotals);\n      };\n\n    openModal = id =>{\n        const product = this.getItem(id);\n        this.setState(() => {\n            return {modalProduct:product, modalOpen:true}\n        })\n    }\n\n    closeModal = () =>{\n        this.setState(() => {\n            return{modalOpen: false}\n        })\n    }\n\n    componentDidMount(){\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        });\n\n        this.setState(() => {\n            return {products: tempProducts};\n        });\n    };\n\n    getTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item => (subTotal += item.total));\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        return {\n          subTotal,\n          tax,\n          total\n        };\n      };\n      addTotals = () => {\n        const totals = this.getTotals();\n        this.setState(\n          () => {\n            return {\n              cartSubTotal: totals.subTotal,\n              cartTax: totals.tax,\n              cartTotal: totals.total\n            };\n          }\n        );\n      };\n      removeItem = id => {\n        let tempProducts = [...this.state.products];\n        let tempCart = [...this.state.cart];\n    \n        const index = tempProducts.indexOf(this.getItem(id));\n        let removedProduct = tempProducts[index];\n        removedProduct.inCart = false;\n        removedProduct.count = 0;\n        removedProduct.total = 0;\n    \n        tempCart = tempCart.filter(item => {\n          return item.id !== id;\n        });\n    \n        this.setState(() => {\n          return {\n            cart: [...tempCart],\n            products: [...tempProducts]\n          };\n        }, this.addTotals);\n      };\n      clearCart = () => {\n        this.setState(\n          () => {\n            return { cart: [] };\n          },\n          () => {\n            this.setProducts();\n            this.addTotals();\n          }\n        );\n      };\n    \n    render() {\n        return (\n            <CourseContext.Provider value={{\n                ...this.state,\n                handleDetail:this.handleDetail,\n                addtoCart:this.addtoCart,\n                openModal: this.openModal,\n                closeModal:this.closeModal,\n                removeItem:this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </CourseContext.Provider>\n        )\n    }\n}\n\n\nconst CourseConsumer = CourseContext.Consumer;\n\nexport {CourseProvider, CourseConsumer};\n"]},"metadata":{},"sourceType":"module"}